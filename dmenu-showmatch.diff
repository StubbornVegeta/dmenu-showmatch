diff --git a/dmenu.c b/dmenu.c
index 65f25ce..4238edc 100644
--- a/dmenu.c
+++ b/dmenu.c
@@ -44,6 +44,7 @@ static struct item *items = NULL;
 static struct item *matches, *matchend;
 static struct item *prev, *curr, *next, *sel;
 static int mon = -1, screen;
+static int TabCount = 0;
 
 static Atom clip, utf8;
 static Display *dpy;
@@ -267,6 +268,7 @@ match(void)
 static void
 insert(const char *str, ssize_t n)
 {
+	TabCount = 0;
 	if (strlen(text) + n > sizeof text - 1)
 		return;
 	/* move existing text out of the way, insert new text, and update cursor */
@@ -333,12 +335,11 @@ keypress(XKeyEvent *ev)
 		case XK_f: ksym = XK_Right;     break;
 		case XK_g: ksym = XK_Escape;    break;
 		case XK_h: ksym = XK_BackSpace; break;
-		case XK_i: ksym = XK_Tab;       break;
 		case XK_j: /* fallthrough */
 		case XK_J: /* fallthrough */
 		case XK_m: /* fallthrough */
 		case XK_M: ksym = XK_Return; ev->state &= ~ControlMask; break;
-		case XK_n: ksym = XK_Down;      break;
+		case XK_n: ksym = XK_Tab;      break;
 		case XK_p: ksym = XK_Up;        break;
 
 		case XK_k: /* delete right */
@@ -449,6 +450,11 @@ insert:
 			curr = prev;
 			calcoffsets();
 		}
+		if (!sel)
+			return;
+		strncpy(text, sel->text, sizeof text - 1);
+		text[sizeof text - 1] = '\0';
+		cursor = strlen(text);
 		break;
 	case XK_Next:
 		if (!next)
@@ -480,20 +486,26 @@ insert:
 		if (lines > 0)
 			return;
 		/* fallthrough */
-	case XK_Down:
-		if (sel && sel->right && (sel = sel->right) == next) {
-			curr = next;
-			calcoffsets();
-		}
-		break;
 	case XK_Tab:
-		if (!sel)
-			return;
-		strncpy(text, sel->text, sizeof text - 1);
-		text[sizeof text - 1] = '\0';
-		cursor = strlen(text);
-		match();
-		break;
+		if (TabCount) {
+			if (!sel)
+				return;
+			if (sel && sel->right && (sel = sel->right) == next) {
+				curr = next;
+				calcoffsets();
+			}
+			strncpy(text, sel->text, sizeof text - 1);
+			text[sizeof text - 1] = '\0';
+			cursor = strlen(text);
+			break;
+        } else {
+			if (!sel)
+				return;
+			strncpy(text, sel->text, sizeof text - 1);
+			text[sizeof text - 1] = '\0';
+			cursor = strlen(text);
+			break;
+        }
 	}
 
 draw:
